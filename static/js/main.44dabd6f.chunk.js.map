{"version":3,"sources":["components/GuitarLearningTool.jsx","App.js","reportWebVitals.js","index.js"],"names":["GuitarLearningTool","chords","string","fret","selectedSong","setSelectedSong","useState","currentChordIndex","setCurrentChordIndex","currentChord","setCurrentChord","React","createElement","className","id","title","artist","difficulty","chordProgression","map","song","key","onClick","handleSongSelect","length","renderFretboard","fretboard","s","stringLine","f","hasFinger","position","finger","find","dot","push","handlePrevChord","prevIndex","disabled","handleNextChord","nextIndex","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.44dabd6f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './GuitarLearningTool.css';\n\nconst GuitarLearningTool = () => {\n  // Canciones disponibles con sus acordes y sus progresiones\n  const songs = [\n    {\n      id: 1,\n      title: \"Have You Ever Seen The Rain\",\n      artist: \"Creedence Clearwater Revival\",\n      difficulty: \"Principiante\",\n      chordProgression: [\"Am\", \"F\", \"C\", \"G\", \"C\", \"G\", \"C\"]\n    },\n    {\n      id: 2,\n      title: \"Valerie\",\n      artist: \"Amy Winehouse\",\n      difficulty: \"Principiante\",\n      chordProgression: [\"E\", \"A\", \"Bm\", \"D\", \"A\", \"E\"]\n    },\n    {\n      id: 3,\n      title: \"Back to Black\",\n      artist: \"Amy Winehouse\",\n      difficulty: \"Intermedio\",\n      chordProgression: [\"Dm\", \"Gm\", \"Bb\", \"A\", \"Dm\"]\n    },\n    {\n      id: 4,\n      title: \"Malagueña\",\n      artist: \"Tradicional Española\",\n      difficulty: \"Principiante\",\n      chordProgression: [\"Em\", \"B7\", \"Em\", \"Am\", \"Em\", \"B7\", \"Em\"]\n    }\n  ];\n\n  // Definición de acordes con posiciones de dedos\n  const chords = {\n    \"C\": [\n      { string: 5, fret: 3 },\n      { string: 4, fret: 2 },\n      { string: 2, fret: 1 },\n    ],\n    \"G\": [\n      { string: 6, fret: 3 },\n      { string: 5, fret: 2 },\n      { string: 1, fret: 3 },\n    ],\n    \"D\": [\n      { string: 4, fret: 0 },\n      { string: 3, fret: 2 },\n      { string: 2, fret: 3 },\n      { string: 1, fret: 2 },\n    ],\n    \"Am\": [\n      { string: 5, fret: 0 },\n      { string: 4, fret: 2 },\n      { string: 3, fret: 2 },\n      { string: 2, fret: 1 },\n    ],\n    \"E\": [\n      { string: 6, fret: 0 },\n      { string: 5, fret: 2 },\n      { string: 4, fret: 2 },\n      { string: 3, fret: 1 },\n      { string: 2, fret: 0 },\n      { string: 1, fret: 0 },\n    ],\n    \"A\": [\n      { string: 5, fret: 0 },\n      { string: 4, fret: 2 },\n      { string: 3, fret: 2 },\n      { string: 2, fret: 2 },\n    ],\n    \"Bm\": [\n      { string: 5, fret: 2 },\n      { string: 4, fret: 4 },\n      { string: 3, fret: 4 },\n      { string: 2, fret: 3 },\n      { string: 1, fret: 2 },\n    ],\n    \"F\": [\n      { string: 6, fret: 1 },\n      { string: 5, fret: 3 },\n      { string: 4, fret: 3 },\n      { string: 3, fret: 2 },\n      { string: 2, fret: 1 },\n      { string: 1, fret: 1 },\n    ],\n    \"Dm\": [\n      { string: 4, fret: 0 },\n      { string: 3, fret: 2 },\n      { string: 2, fret: 3 },\n      { string: 1, fret: 1 },\n    ],\n    \"Gm\": [\n      { string: 6, fret: 3 },\n      { string: 5, fret: 5 },\n      { string: 4, fret: 5 },\n      { string: 3, fret: 3 },\n      { string: 2, fret: 3 },\n      { string: 1, fret: 3 },\n    ],\n    \"Bb\": [\n      { string: 6, fret: 1 },\n      { string: 5, fret: 3 },\n      { string: 4, fret: 3 },\n      { string: 3, fret: 3 },\n      { string: 2, fret: 3 },\n      { string: 1, fret: 1 },\n    ],\n    \"B7\": [\n      { string: 5, fret: 2 },\n      { string: 4, fret: 1 },\n      { string: 3, fret: 2 },\n      { string: 2, fret: 0 },\n      { string: 1, fret: 2 },\n    ],\n    \"Em\": [\n      { string: 6, fret: 0 },\n      { string: 5, fret: 2 },\n      { string: 4, fret: 2 },\n      { string: 3, fret: 0 },\n      { string: 2, fret: 0 },\n      { string: 1, fret: 0 },\n    ],\n  };\n\n  const [selectedSong, setSelectedSong] = useState(null);\n  const [currentChordIndex, setCurrentChordIndex] = useState(0);\n  const [currentChord, setCurrentChord] = useState(null);\n\n  // Seleccionar canción\n  const handleSongSelect = (song) => {\n    setSelectedSong(song);\n    setCurrentChordIndex(0);\n    setCurrentChord(song.chordProgression[0]);\n  };\n\n  // Ir al acorde siguiente\n  const handleNextChord = () => {\n    if (selectedSong && currentChordIndex < selectedSong.chordProgression.length - 1) {\n      const nextIndex = currentChordIndex + 1;\n      setCurrentChordIndex(nextIndex);\n      setCurrentChord(selectedSong.chordProgression[nextIndex]);\n    }\n  };\n\n  // Ir al acorde anterior\n  const handlePrevChord = () => {\n    if (selectedSong && currentChordIndex > 0) {\n      const prevIndex = currentChordIndex - 1;\n      setCurrentChordIndex(prevIndex);\n      setCurrentChord(selectedSong.chordProgression[prevIndex]);\n    }\n  };\n\n  // Generar el diapasón de la guitarra\n  const renderFretboard = () => {\n    const strings = 6;\n    const frets = 5;\n    const fretboard = [];\n\n    for (let s = 1; s <= strings; s++) {\n      const stringLine = [];\n      for (let f = 0; f <= frets; f++) {\n        let hasFinger = false;\n        let position = null;\n\n        if (currentChord && chords[currentChord]) {\n          const finger = chords[currentChord].find(\n            dot => dot.string === s && dot.fret === f\n          );\n          if (finger) {\n            hasFinger = true;\n            position = finger;\n          }\n        }\n\n        stringLine.push(\n          <div \n            key={`fret-${s}-${f}`} \n            className={`fret ${f === 0 ? 'nut' : ''}`}\n          >\n            {hasFinger && (\n              <div className=\"finger-dot\">\n                •\n              </div>\n            )}\n          </div>\n        );\n      }\n      fretboard.push(\n        <div key={`string-${s}`} className=\"string\">\n          {stringLine}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"fretboard\">\n        {fretboard}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"guitar-app\">\n      <h1 className=\"app-title\">Aprende Guitarra Española</h1>\n      \n      {/* Selector de canciones */}\n      <div className=\"song-selector\">\n        <h2 className=\"section-title\">Selecciona una canción:</h2>\n        <div className=\"song-grid\">\n          {songs.map(song => (\n            <button\n              key={song.id}\n              onClick={() => handleSongSelect(song)}\n              className={`song-button ${selectedSong?.id === song.id ? 'selected' : ''}`}\n            >\n              <div className=\"song-title\">{song.title}</div>\n              <div className=\"song-artist\">{song.artist}</div>\n              <div className=\"song-difficulty\">{song.difficulty}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {selectedSong && (\n        <div className=\"song-display\">\n          <div className=\"song-header\">\n            <h2 className=\"song-display-title\">{selectedSong.title}</h2>\n            <p className=\"song-display-artist\">{selectedSong.artist}</p>\n          </div>\n\n          {/* Información del acorde actual */}\n          <div className=\"chord-info\">\n            <div className=\"chord-name\">{currentChord}</div>\n            <div className=\"chord-position\">\n              Acorde {currentChordIndex + 1} de {selectedSong.chordProgression.length}\n            </div>\n          </div>\n\n          {/* Diapasón de la guitarra */}\n          {renderFretboard()}\n\n          {/* Controles de navegación */}\n          <div className=\"navigation-controls\">\n            <button\n              onClick={handlePrevChord}\n              disabled={currentChordIndex === 0}\n              className={`nav-button ${currentChordIndex === 0 ? 'disabled' : ''}`}\n            >\n              ← Anterior\n            </button>\n            <button\n              onClick={handleNextChord}\n              disabled={currentChordIndex === selectedSong.chordProgression.length - 1}\n              className={`nav-button ${currentChordIndex === selectedSong.chordProgression.length - 1 ? 'disabled' : ''}`}\n            >\n              Siguiente →\n            </button>\n          </div>\n        </div>\n      )}\n\n      {!selectedSong && (\n        <div className=\"select-prompt\">\n          Por favor, selecciona una canción para empezar a practicar\n        </div>\n      )}\n\n      <div className=\"app-footer\">\n        <p>Herramienta de aprendizaje para guitarra española</p>\n        <p>Selecciona una canción y practica los acordes</p>\n      </div>\n    </div>\n  );\n};\n\nexport default GuitarLearningTool;","import React from 'react';\nimport GuitarLearningTool from './components/GuitarLearningTool';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GuitarLearningTool />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}